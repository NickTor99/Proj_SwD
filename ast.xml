<ProgramOp><Type>VOID</Type><VarDeclOp><Type>STRING</Type>
<IdInit> <Type>VOID</Type><ID>menu<Type>STRING</Type></ID><BiExprNode><Type>STRING</Type><BiExprNode><Type>STRING</Type><BiExprNode><Type>STRING</Type><BiExprNode><Type>STRING</Type><CONST>STRING_CONST,(1) somma di due numeri\n</CONST> <Operatore>STR_CONCAT</Operatore> <CONST>STRING_CONST,(2) moltiplicazione di due numeri\n</CONST> </BiExprNode><Operatore>STR_CONCAT</Operatore> <CONST>STRING_CONST,(3) divisione intera tra due numeri\n</CONST> </BiExprNode><Operatore>STR_CONCAT</Operatore> <CONST>STRING_CONST,(4) elevamento a potenza\n</CONST> </BiExprNode><Operatore>STR_CONCAT</Operatore> <CONST>STRING_CONST,(5) succesione di fibonacci\n</CONST> </BiExprNode></IdInit></VarDeclOp> <VarDeclOp><Type>INTEGER</Type>
<IdInit> <Type>VOID</Type><ID>setSize<Type>INTEGER</Type></ID><CONST>INTEGER_CONST,100</CONST> </IdInit></VarDeclOp> <FunOp><ID>inizio<Type>VOID</Type></ID><isMain>True</isMain> <Return_Type>VOID</Return_Type> <BodyOp><Type>VOID</Type><VarDeclOp><Type>VAR</Type>
<IdInit> <Type>VOID</Type><ID>num1<Type>REAL</Type></ID><CONST>REAL_CONST,0.0</CONST> </IdInit><IdInit> <Type>VOID</Type><ID>num2<Type>REAL</Type></ID><CONST>REAL_CONST,0.0</CONST> </IdInit><IdInit> <Type>VOID</Type><ID>num<Type>INTEGER</Type></ID><CONST>INTEGER_CONST,0</CONST> </IdInit></VarDeclOp><VarDeclOp><Type>INTEGER</Type>
<IdInit> <Type>VOID</Type><ID>op<Type>INTEGER</Type></ID></IdInit></VarDeclOp><VarDeclOp><Type>VAR</Type>
<IdInit> <Type>VOID</Type><ID>ans<Type>STRING</Type></ID><CONST>STRING_CONST,si</CONST> </IdInit></VarDeclOp><VarDeclOp><Type>STRING</Type>
<IdInit> <Type>VOID</Type><ID>size<Type>STRING</Type></ID><CONST>STRING_CONST,piccolo</CONST> </IdInit></VarDeclOp><WriteOp><Type>VOID</Type><Write_Type>WRITE</Write_Type> <CONST>STRING_CONST,Arrivederci :)</CONST> </WriteOp><WhileOp><Type>VOID</Type><BiExprNode><Type>BOOL</Type><ID>ans<Type>STRING</Type></ID><Operatore>EQ</Operatore> <CONST>STRING_CONST,si</CONST> </BiExprNode><BodyOp><Type>VOID</Type><ReadOp><Type>VOID</Type><IdInit> <Type>VOID</Type><ID>ans<Type>STRING</Type></ID></IdInit><CONST>STRING_CONST,vuoi continuare? (si/no)</CONST> </ReadOp><IfStatOp><Type>VOID</Type><BiExprNode><Type>BOOL</Type><BiExprNode><Type>BOOL</Type><BiExprNode><Type>BOOL</Type><BiExprNode><Type>BOOL</Type><ID>op<Type>INTEGER</Type></ID><Operatore>EQ</Operatore> <CONST>INTEGER_CONST,1</CONST> </BiExprNode><Operatore>OR</Operatore> <BiExprNode><Type>BOOL</Type><ID>op<Type>INTEGER</Type></ID><Operatore>EQ</Operatore> <CONST>INTEGER_CONST,2</CONST> </BiExprNode></BiExprNode><Operatore>OR</Operatore> <BiExprNode><Type>BOOL</Type><ID>op<Type>INTEGER</Type></ID><Operatore>EQ</Operatore> <CONST>INTEGER_CONST,3</CONST> </BiExprNode></BiExprNode><Operatore>OR</Operatore> <BiExprNode><Type>BOOL</Type><ID>op<Type>INTEGER</Type></ID><Operatore>EQ</Operatore> <CONST>INTEGER_CONST,4</CONST> </BiExprNode></BiExprNode><BodyOp><Type>VOID</Type><IfStatOp><Type>VOID</Type><BiExprNode><Type>BOOL</Type><ID>op<Type>INTEGER</Type></ID><Operatore>EQ</Operatore> <CONST>INTEGER_CONST,3</CONST> </BiExprNode><BodyOp><Type>VOID</Type><WriteOp><Type>VOID</Type><Write_Type>WRITELN</Write_Type> <BiExprNode><Type>STRING</Type><BiExprNode><Type>STRING</Type><CONST>STRING_CONST,, un numero </CONST> <Operatore>STR_CONCAT</Operatore> <ID>size<Type>STRING</Type></ID></BiExprNode><Operatore>STR_CONCAT</Operatore> <CONST>STRING_CONST,!</CONST> </BiExprNode><CallFunOp><Type>INTEGER</Type><ID>divIntera<Type>INTEGER</Type></ID><Parametri><ID>size<Type>STRING</Type></ID><ID>num2<Type>REAL</Type></ID><ID>num1<Type>REAL</Type></ID></Parametri></CallFunOp><CONST>STRING_CONST,il risultato e': </CONST> </WriteOp></BodyOp><BodyOp><Type>VOID</Type><WriteOp><Type>VOID</Type><Write_Type>WRITELN</Write_Type> <CallFunOp><Type>REAL</Type><ID>operazione<Type>REAL</Type></ID><Parametri><ID>num2<Type>REAL</Type></ID><ID>num1<Type>REAL</Type></ID><ID>op<Type>INTEGER</Type></ID></Parametri></CallFunOp><CONST>STRING_CONST,il risultato e': </CONST> </WriteOp></BodyOp></IfStatOp><ReadOp><Type>VOID</Type><IdInit> <Type>VOID</Type><ID>num2<Type>REAL</Type></ID></IdInit><CONST>STRING_CONST,inserisci il secondo numero </CONST> </ReadOp><ReadOp><Type>VOID</Type><IdInit> <Type>VOID</Type><ID>num1<Type>REAL</Type></ID></IdInit><CONST>STRING_CONST,inserisci in primo numero </CONST> </ReadOp></BodyOp><BodyOp><Type>VOID</Type><IfStatOp><Type>VOID</Type><BiExprNode><Type>BOOL</Type><ID>op<Type>INTEGER</Type></ID><Operatore>EQ</Operatore> <CONST>INTEGER_CONST,5</CONST> </BiExprNode><BodyOp><Type>VOID</Type><WriteOp><Type>VOID</Type><Write_Type>WRITELN</Write_Type> <CallFunOp><Type>INTEGER</Type><ID>fibonacci<Type>INTEGER</Type></ID><Parametri><ID>num<Type>INTEGER</Type></ID></Parametri></CallFunOp><CONST>STRING_CONST,il risultato e': </CONST> </WriteOp><WhileOp><Type>VOID</Type><BiExprNode><Type>BOOL</Type><ID>num<Type>INTEGER</Type></ID><Operatore>LT</Operatore> <CONST>INTEGER_CONST,0</CONST> </BiExprNode><BodyOp><Type>VOID</Type><ReadOp><Type>VOID</Type><IdInit> <Type>VOID</Type><ID>num<Type>INTEGER</Type></ID></IdInit><CONST>STRING_CONST,il numero deve essere positivo! Prova ad inserirlo di nuovo </CONST> </ReadOp></BodyOp></WhileOp><ReadOp><Type>VOID</Type><IdInit> <Type>VOID</Type><ID>num<Type>INTEGER</Type></ID></IdInit><CONST>STRING_CONST,inserisci un numero intero positivo </CONST> </ReadOp></BodyOp><BodyOp><Type>VOID</Type><WriteOp><Type>VOID</Type><Write_Type>WRITELN</Write_Type> <CONST>STRING_CONST,hai inserito un numero sbagliato!</CONST> </WriteOp></BodyOp></IfStatOp></BodyOp></IfStatOp><ReadOp><Type>VOID</Type><IdInit> <Type>VOID</Type><ID>op<Type>INTEGER</Type></ID></IdInit></ReadOp><WriteOp><Type>VOID</Type><Write_Type>WRITELN</Write_Type> <ID>menu<Type>STRING</Type></ID><CONST>STRING_CONST,Scegli che operazione fare inserendo il numero corrispondente:\n</CONST> </WriteOp></BodyOp></WhileOp></BodyOp></FunOp> <FunOp><ID>fibonacci<Type>INTEGER</Type></ID><isMain>False</isMain> <ParDeclOp><Mode>IN</Mode> <Type>INTEGER</Type> <IdInit> <Type>VOID</Type><ID>a<Type>INTEGER</Type></ID></IdInit></ParDeclOp><Return_Type>INTEGER</Return_Type> <BodyOp><Type>VOID</Type><VarDeclOp><Type>INTEGER</Type>
<IdInit> <Type>VOID</Type><ID>risultato<Type>INTEGER</Type></ID><CONST>INTEGER_CONST,0</CONST> </IdInit></VarDeclOp><Return><BiExprNode><Type>INTEGER</Type><CallFunOp><Type>INTEGER</Type><ID>fibonacci<Type>INTEGER</Type></ID><Parametri><BiExprNode><Type>INTEGER</Type><ID>a<Type>INTEGER</Type></ID><Operatore>MINUS</Operatore> <CONST>INTEGER_CONST,1</CONST> </BiExprNode></Parametri></CallFunOp><Operatore>PLUS</Operatore> <CallFunOp><Type>INTEGER</Type><ID>fibonacci<Type>INTEGER</Type></ID><Parametri><BiExprNode><Type>INTEGER</Type><ID>a<Type>INTEGER</Type></ID><Operatore>MINUS</Operatore> <CONST>INTEGER_CONST,2</CONST> </BiExprNode></Parametri></CallFunOp></BiExprNode></Return><IfStatOp><Type>VOID</Type><BiExprNode><Type>BOOL</Type><ID>a<Type>INTEGER</Type></ID><Operatore>EQ</Operatore> <CONST>INTEGER_CONST,1</CONST> </BiExprNode><BodyOp><Type>VOID</Type><Return><CONST>INTEGER_CONST,1</CONST> </Return></BodyOp></IfStatOp><IfStatOp><Type>VOID</Type><BiExprNode><Type>BOOL</Type><ID>a<Type>INTEGER</Type></ID><Operatore>EQ</Operatore> <CONST>INTEGER_CONST,0</CONST> </BiExprNode><BodyOp><Type>VOID</Type><Return><CONST>INTEGER_CONST,0</CONST> </Return></BodyOp></IfStatOp></BodyOp></FunOp> <FunOp><ID>divIntera<Type>INTEGER</Type></ID><isMain>False</isMain> <ParDeclOp><Mode>IN</Mode> <Type>REAL</Type> <IdInit> <Type>VOID</Type><ID>a<Type>REAL</Type></ID></IdInit></ParDeclOp><ParDeclOp><Mode>IN</Mode> <Type>REAL</Type> <IdInit> <Type>VOID</Type><ID>b<Type>REAL</Type></ID></IdInit></ParDeclOp><ParDeclOp><Mode>OUT</Mode> <Type>STRING</Type> <IdInit> <Type>VOID</Type><ID>size<Type>STRING</Type></ID></IdInit></ParDeclOp><Return_Type>INTEGER</Return_Type> <BodyOp><Type>VOID</Type><VarDeclOp><Type>INTEGER</Type>
<IdInit> <Type>VOID</Type><ID>result<Type>INTEGER</Type></ID><BiExprNode><Type>REAL</Type><ID>a<Type>REAL</Type></ID><Operatore>DIV</Operatore> <ID>b<Type>REAL</Type></ID></BiExprNode></IdInit></VarDeclOp><Return><ID>result<Type>INTEGER</Type></ID></Return><IfStatOp><Type>VOID</Type><BiExprNode><Type>BOOL</Type><ID>result<Type>INTEGER</Type></ID><Operatore>GE</Operatore> <ID>setSize<Type>INTEGER</Type></ID></BiExprNode><BodyOp><Type>VOID</Type><AssignOp><Type>VOID</Type><IdInit> <Type>VOID</Type><ID>size<Type>STRING</Type></ID></IdInit><CONST>STRING_CONST,grande</CONST> </AssignOp></BodyOp></IfStatOp></BodyOp></FunOp> <FunOp><ID>operazione<Type>REAL</Type></ID><isMain>False</isMain> <ParDeclOp><Mode>IN</Mode> <Type>INTEGER</Type> <IdInit> <Type>VOID</Type><ID>op<Type>INTEGER</Type></ID></IdInit></ParDeclOp><ParDeclOp><Mode>IN</Mode> <Type>REAL</Type> <IdInit> <Type>VOID</Type><ID>a<Type>REAL</Type></ID></IdInit></ParDeclOp><ParDeclOp><Mode>IN</Mode> <Type>REAL</Type> <IdInit> <Type>VOID</Type><ID>b<Type>REAL</Type></ID></IdInit></ParDeclOp><Return_Type>REAL</Return_Type> <BodyOp><Type>VOID</Type><IfStatOp><Type>VOID</Type><BiExprNode><Type>BOOL</Type><ID>op<Type>INTEGER</Type></ID><Operatore>EQ</Operatore> <CONST>INTEGER_CONST,4</CONST> </BiExprNode><BodyOp><Type>VOID</Type><Return><BiExprNode><Type>REAL</Type><ID>a<Type>REAL</Type></ID><Operatore>POW</Operatore> <ID>b<Type>REAL</Type></ID></BiExprNode></Return></BodyOp></IfStatOp><IfStatOp><Type>VOID</Type><BiExprNode><Type>BOOL</Type><ID>op<Type>INTEGER</Type></ID><Operatore>EQ</Operatore> <CONST>INTEGER_CONST,2</CONST> </BiExprNode><BodyOp><Type>VOID</Type><VarDeclOp><Type>VAR</Type>
<IdInit> <Type>VOID</Type><ID>result<Type>REAL</Type></ID><CONST>REAL_CONST,0.0</CONST> </IdInit></VarDeclOp><Return><BiExprNode><Type>REAL</Type><ID>result<Type>REAL</Type></ID><Operatore>PLUS</Operatore> <BiExprNode><Type>REAL</Type><ID>a<Type>REAL</Type></ID><Operatore>TIMES</Operatore> <ID>b<Type>REAL</Type></ID></BiExprNode></BiExprNode></Return><WhileOp><Type>VOID</Type><BiExprNode><Type>BOOL</Type><ID>a<Type>REAL</Type></ID><Operatore>GE</Operatore> <CONST>INTEGER_CONST,1</CONST> </BiExprNode><BodyOp><Type>VOID</Type><AssignOp><Type>VOID</Type><IdInit> <Type>VOID</Type><ID>result<Type>REAL</Type></ID></IdInit><BiExprNode><Type>REAL</Type><ID>result<Type>REAL</Type></ID><Operatore>PLUS</Operatore> <ID>b<Type>REAL</Type></ID></BiExprNode></AssignOp><AssignOp><Type>VOID</Type><IdInit> <Type>VOID</Type><ID>a<Type>REAL</Type></ID></IdInit><BiExprNode><Type>REAL</Type><ID>a<Type>REAL</Type></ID><Operatore>MINUS</Operatore> <CONST>INTEGER_CONST,1</CONST> </BiExprNode></AssignOp></BodyOp></WhileOp></BodyOp></IfStatOp><IfStatOp><Type>VOID</Type><BiExprNode><Type>BOOL</Type><ID>op<Type>INTEGER</Type></ID><Operatore>EQ</Operatore> <CONST>INTEGER_CONST,1</CONST> </BiExprNode><BodyOp><Type>VOID</Type><Return><BiExprNode><Type>REAL</Type><ID>a<Type>REAL</Type></ID><Operatore>PLUS</Operatore> <ID>b<Type>REAL</Type></ID></BiExprNode></Return></BodyOp></IfStatOp></BodyOp></FunOp> </ProgramOp>